# One of the key tasks of automation are to install and configure services on
# servers. This example installs apache webserver with no custom configuration
# on one of the servers. If apache2 is already installed, this step is skipped.
- name: install apache2
  apt: name=apache2 update_cache=yes

# If apache is not running, this starts it. Automation can be used to force a
# a server into a consistent state - if apache crashed or stopped running for
# any reason, this playbook will attempt to get it running again. If it's already
# running, this step is skipped.
- name: run apache2
  service: name=apache2 state=started

# Configure apache2 to run on a non-default port. We'll then serve this port
# up as 80 via haproxy
- name: apache2 listen on port 8081
  lineinfile: dest=/etc/apache2/ports.conf regexp="^Listen 80" line="Listen 8081" state=present

- name: apache2 virtualhost on port 8081
  lineinfile: dest=/etc/apache2/sites-available/000-default.conf regexp="^<VirtualHost \*:80>" line="<VirtualHost *:8081>" state=present

- name: create virtual host file
  template: src=virtualhost.cnf dest=/etc/apache2/sites-available/{{ domain }}.conf

- name: create webroot
  file: path=/var/www/{{ domain }} state=directory

- name: create index file for site
  template: src=index.j2 dest=/var/www/{{ domain }}/index.html

- name: a2ensite {{ domain }}
  command: a2ensite {{ domain }}

- name: restart apache2
  service: name=apache2 state=restarted
